#!/bin/bash

# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î –±–µ–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤

set -e

function show_help() {
    echo "üóÉÔ∏è Telegram Bot Database Tools"
    echo "=============================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–º–∞–Ω–¥–∞>"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  connect     - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ psql –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ"
    echo "  query       - –í—ã–ø–æ–ª–Ω–∏—Ç—å SQL –∑–∞–ø—Ä–æ—Å"
    echo "  stats       - –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  analyze     - –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo "  monitor     - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  backup      - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø"
    echo "  debug-on    - –í–∫–ª—é—á–∏—Ç—å debug —Ä–µ–∂–∏–º (—Å –ø–æ—Ä—Ç–∞–º–∏)"
    echo "  debug-off   - –í—ã–∫–ª—é—á–∏—Ç—å debug —Ä–µ–∂–∏–º"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 connect"
    echo "  $0 query \"SELECT COUNT(*) FROM users\""
    echo "  $0 stats"
}

case "$1" in
    "connect")
        echo "üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL..."
        docker compose exec postgres psql -U postgres -d telegram_bot
        ;;
    "query")
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ SQL –∑–∞–ø—Ä–æ—Å: $0 query \"SELECT * FROM users LIMIT 5\""
            exit 1
        fi
        echo "üîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞: $2"
        docker compose exec postgres psql -U postgres -d telegram_bot -c "$2"
        ;;
    "stats")
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Telegram Bot:"
        docker compose exec postgres psql -U postgres -d telegram_bot -c "
        SELECT 
            'Total users' as metric, COUNT(*)::text as value FROM users
        UNION ALL
        SELECT 
            'Banned users', COUNT(*)::text FROM users WHERE is_banned = true
        UNION ALL
        SELECT 
            'Total messages', COUNT(*)::text FROM messages
        UNION ALL
        SELECT 
            'Messages with violations', COUNT(*)::text FROM messages WHERE contains_violations = true
        UNION ALL
        SELECT 
            'Active chats', COUNT(DISTINCT chat_id)::text FROM chat_configs;
        "
        ;;
    "analyze")
        if docker compose ps db-tools &>/dev/null; then
            echo "üìà –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
            docker compose exec db-tools ./analyze.sh
        else
            echo "‚ùå Debug —Ä–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 debug-on"
        fi
        ;;
    "monitor")
        if docker compose ps db-tools &>/dev/null; then
            echo "üì° –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
            docker compose exec db-tools ./monitor.sh
        else
            echo "‚ùå Debug —Ä–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 debug-on"
        fi
        ;;
    "backup")
        echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
        ./scripts/backup.sh
        ;;
    "debug-on")
        echo "üõ†Ô∏è –í–∫–ª—é—á–µ–Ω–∏–µ debug —Ä–µ–∂–∏–º–∞..."
        docker compose -f docker-compose.yml -f docker-compose.debug.yml up -d
        echo "‚úÖ Debug —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω!"
        echo "üåê pgAdmin: http://localhost:8080 (admin@example.com / admin)"
        echo "üîó PostgreSQL: localhost:5433"
        ;;
    "debug-off")
        echo "üîí –í—ã–∫–ª—é—á–µ–Ω–∏–µ debug —Ä–µ–∂–∏–º–∞..."
        docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
        echo "‚úÖ Production —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω (–±–µ–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤)"
        ;;
    *)
        show_help
        ;;
esac
